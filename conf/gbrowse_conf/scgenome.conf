[GENERAL]
description   =  S. cerevisiae from Saccharomyces Genome Database (SGD)
database      = scgenome

initial landmark = chrI:123000..160000

# bring in the special Submitter plugin for the rubber-band select menu                                           
plugins   = FastaDumper RestrictionAnnotator OligoFinder SequenceDumper TrackDumper Submitter BatchDumper
# OligoFinder is BUGGY ATM
autocomplete = 1

# examples to show in the introduction
examples = chrIII
	chrV:80,000..120,000
	SGS1
	RPL28
	YCR065W
	flocculation
	CAATGATTACGGCATT

# "automatic" classes to try when an unqualified identifier is given
automatic classes = gene Sequence

# Advanced feature: custom balloons
custom balloons = [balloon]
                  delayTime = 500

                  [balloon500]
	          maxWidth  = 500
                  delayTime = 50

# routines to compile in advance
# NOTE THAT $feature->attributes returns an ARRAY REF in BioPerl 1.6.X/Bio::DB::SeqFeature
# I have added ($var) to all cases; assuming that there will be at most 1 useful value
# Also had to change attribute 'Gene' -> 'gene'
#
# Note (EC): $feature->seqname has been changed to $feature->seq_id as seqname has been
#            deprecated. I have also specified features as type:source where necessary 
#            to distinguish data of the same type from different sources.

init_code =	sub orf_color {
			my $feature = shift;
			my ($orfclass) = $feature->attributes('orf_classification');
			my $type = $feature->type;
			return 'black' if ($type =~ /transcribed_spacer/);
			return 'lightgrey' if ($orfclass eq "Dubious");
			return 'peachpuff' if ($orfclass eq "Uncharacterized");
			return 'red' if ($orfclass eq "Verified");
			return 'green' if ($orfclass eq "silenced_gene:Verified");
			return 'brown' if ($orfclass eq "silenced_gene");
			return 'wheat';
		}
		sub orf_class {
			my $feature = shift;
			my ($gene) = $feature->attributes('gene');
			my ($orfclass) = $feature->attributes('orf_classification');
			return "$gene, $orfclass" if ( defined($gene) && defined($orfclass));
			return "$orfclass" if ( defined($orfclass) );
			return $feature->attributes('Note');
		}
		sub feat_desc {
			my $feature = shift;
			my ($gene) = $feature->attributes('gene');
			my ($desc) = $feature->attributes('Note');
			my ($orfclass) = $feature->attributes('orf_classification');
	 		$desc =~ s/^([^;\.]*?)[;,\.] .*/$1/;
			#$desc =~ s/; .+//;
			#$desc =~ s/, .+//;
			#$desc =~ s/\. .+//;
			my $rtnstr = "";
			$rtnstr = "$gene, " if ( defined($gene) );
			$rtnstr .= "$orfclass, " if ( defined($orfclass) );
			$rtnstr .= "$desc" if ( defined($desc) );
			return "$rtnstr";
		}
		sub pcr_desc {
			my $feature = shift;
			my ($desc) = $feature->attributes('Note');
			my $rtnstr = "";
			$rtnstr .= "$desc" if ( defined($desc) );
			return "$rtnstr";
		}
		sub strand_color {
			shift->strand > 0 ? 'violet' : 'turquoise';
		}
		sub codontable_check {
			my $feature = shift;
			my $ref = $feature->seq_id;
			# or $feature->ref for older bioperl
			return $ref =~ /Mit/i ? 3 : 1;
		}
		sub trunc_name {
			my $feature = shift;
			my $name = $feature->name;
			$name =~ s/\-S\d+//;
			return "$name";
		}
		sub seq_name {
			my $feature = shift;
			my ($name) = $feature->attributes('sage_tag_sequence');
			return "$name";
		}
		sub TF_url {
			my $feature = shift;
			my $name = $feature->name;
			$name =~ s/\-S\d+//;
			return "/cgi-bin/gbrowse/scgenome/?name=$name";
		}
		sub seq_color {
			my $feature = shift;
			my ($change) = $feature->attributes('change');
			return 'midnightblue' if ($change eq "IntronExonChange");
			return 'mintcream' if ($change eq "merger");
			return 'cyan' if ($change eq "CtermChange");
			return 'cornflowerblue' if ($change eq "NtermChange");
			return 'fuchsia' if ($change eq "NewORF");
			return 'yellow' if ($change eq "Deletion");
			return 'orange' if ($change eq "Insertions");
			return 'firebrick' if ($change eq "Substitution");
		}
		sub transcript_hit {
			my $feature = shift;
			my ($G) = $feature->attributes('G-cap_judgement');
			my ($hit) = $feature->attributes('genomic_hit');
			return 'orangered' if ( ($G =~ /perfect/i) && ($hit =~ /single\sgenomic\slocus/i) );
			return 'peachpuff' if ( ($G =~ /perfect/i) && ($hit =~ /multiple\sgenomic\sloci/i) );
			return 'darkblue' if ( ($G !~ /perfect/i) && ($hit =~ /single\sgenomic\slocus/i) );
			return 'lightsteelblue' if ( ($G !~ /perfect/i) && ($hit =~ /multiple\sgenomic\sloci/i) );
		}
		sub rna_glyph{ 
			my $f = shift;
			my $type = $f->type;
			return "line" if ( ($type =~ /^region/) || ($type =~ /transcribed_spacer_region/) );
			#return "processed_transcript";
                        return "gene";
		}
		sub hover {
			my ($name, $data) = @_;
			my $tab = "<table><tr><th align=left colspan=2>$name</th></tr>";
			for my $dat (@$data) {
			   $tab .= "<tr><td>$dat->{Key}</td><td>$dat->{Value}</td></tr>";
			}
			return $tab . "</table>";
		}

#################################
# database definitions
#################################

#include ../GBrowse.database.local

# Advanced feature: an example of callbacks to bei run remotely
# by gbrowse_details for AJAX/iframe balloons

# Advanced feature:
# Pop up rubberband menus for submitting selected region to search engines...
#include "detail_select_menu.conf"
#include "submitter_plugin.conf"

# Default glyph settings
[TRACK DEFAULTS]
glyph       = generic
database    = scgenome
height      = 8
bgcolor     = cyan
fgcolor     = black
label density = 25
bump density  = 100
show summary  = 99999  # go into summary mode when zoomed out to 100k
# default pop-up balloon
balloon hover = <b>$name</b> is a $type spanning $ref from $start to $end. Click for more details.

### TRACK CONFIGURATION ####
# the remainder of the sections configure individual tracks

[Landmarks:overview]
database        = scgenome
feature		= region:landmark centromere:SGD
glyph		= sub { 
		my $f = shift;
		my $type = $f->type;
		return "dot" if ($type eq "centromere:SGD");
		return "span";
		}
height		= 10
label		= sub {
		my $f = shift;
		my $nm = $f->name;
		return $nm if $nm;
		my ($lid) = $f->attributes('load_id');
		return $lid;
                }
key		= Landmarks

[SGD Everything]
database        = scgenome
feature		= gene:SGD telomere:SGD centromere:SGD ARS:SGD tRNA:SGD rRNA:SGD snoRNA:SGD snRNA:SGD ncRNA:SGD gene_cassette:SGD repeat_region:SGD long_terminal_repeat:SGD LTR_retrotransposon:SGD telomeric_repeat:SGD X_element_combinatorial_repeat:SGD X_element:SGD Y_prime_element:SGD non_transcribed_region:SGD
glyph		= \&rna_glyph
category        = SGD Reference
key		= All Annotated Sequence Features
description	= \&feat_desc
fgcolor         = black
bgcolor		= \&orf_color
link		= http://www.yeastgenome.org/cgi-bin/locus.fpl?locus=$name
label		= 1
thin_utr	= 1
balloon hover width = 350
balloon hover   = sub { 
		my $f = shift;
		my $name = $f->name;
		$name =~ s/\"\'//g;
		my ($desc) = $f->attributes('Note');
		$desc =~ s/[\'\"]//g;
		my (@alias) = $f->attributes('alias');
		my ($gene) = $f->attributes('gene');
		my $aliaslist = join(', ', @alias);
		$aliaslist =~ s/$gene\, //;
		$aliaslist =~ s/$gene//;
		my ($orf) = $f->attributes('orf_classification');
		my ($dbxref) = $f->attributes('dbxref');
		my $ref = $f->seq_id;
		my $beg = $f->start;
		my $end = $f->end;
		my $strand = $f->strand;
		my $coord = "$ref\:$beg\.\.$end";
		$coord = "$ref\:$end\.\.$beg" if ($strand == -1);
		my @data;
		push @data, { Key => 'Gene Name:', Value => "$gene" } if $gene;
		push @data, { Key => 'ORF Name:', Value => "$name" };
		push @data, { Key => 'Alias:', Value => "$aliaslist" } if $aliaslist;
		push @data, { Key => 'Classification:', Value => "$orf" } if $orf;
		push @data, { Key => 'SGDID:', Value => "$dbxref" } if $dbxref;
		push @data, { Key => 'Coordinates:', Value => "$coord" };
		push @data, { Key => 'Description:', Value => "$desc" } if $desc;
		hover("Annotated Sequence Feature", \@data);
		}

[SGD Protein-coding Genes]
database        = scgenome
feature		= gene:SGD gene_cassette:SGD transposable_element_gene:SGD
glyph		= gene
category        = SGD Reference
stranded	= 1
strand_arrow	= 1
height		= 8
thin_utr	= 1
key		= Protein-coding Genes
description	= \&orf_class
fgcolor         = black
bgcolor		= \&orf_color
link		= http://www.yeastgenome.org/cgi-bin/locus.fpl?locus=$name
label		= 1
balloon hover width = 350
balloon hover	= sub {
		my $f = shift;
		my $name = $f->name;
		$name =~ s/\"\'//g;
		my ($desc) = $f->attributes('Note');
		$desc =~ s/[\'\"]//g;
		my (@alias) = $f->attributes('alias');
		my $aliaslist = join(', ', @alias);
		my ($gene) = $f->attributes('gene');
		$aliaslist =~ s/$gene\, //;
		$aliaslist =~ s/$gene//;
		my ($orf) = $f->attributes('orf_classification');
		my ($dbxref) = $f->attributes('dbxref');
		my $ref = $f->seq_id;
		my $beg = $f->start;
		my $end = $f->end;
		my $strand = $f->strand;
		my $coord = "$ref\:$beg\.\.$end";
		$coord = "$ref\:$end\.\.$beg" if ($strand == -1);
		my @data;
		push @data, { Key => 'Gene Name:', Value => "$gene" } if $gene;
		push @data, { Key => 'ORF Name:', Value => "$name" };
		push @data, { Key => 'Alias:', Value => "$aliaslist" } if $aliaslist;
		push @data, { Key => 'Classification:', Value => "$orf" } if $orf;
		push @data, { Key => 'SGDID:', Value => "$dbxref" } if $dbxref;
		push @data, { Key => 'Coordinates:', Value => "$coord" };
		push @data, { Key => 'Description:', Value => "$desc" } if $desc;
		hover("Protein encoding Gene", \@data);
		}

[SGD RNA Genes]
database        = scgenome
feature		= tRNA:SGD snoRNA:SGD snRNA:SGD rRNA:SGD ncRNA:SGD nc_primary_transcript:SGD
fgcolor		= black
category        = SGD Reference
glyph		= \&rna_glyph
key		= Non-coding RNA Genes
description	= \&feat_desc
bgcolor		= \&strand_color
link		= http://www.yeastgenome.org/cgi-bin/locus.fpl?locus=$name
label		= 1
balloon hover width = 350
balloon hover	= sub {
		my $f = shift;
		my $name = $f->name;
		$name =~ s/\"\'//g;
		my ($desc) = $f->attributes('Note');
		$desc =~ s/[\'\"]//g;
		my ($dbxref) = $f->attributes('dbxref');
		my (@alias) = $f->attributes('alias');
		my $aliaslist = join(', ', @alias);
		my $ref = $f->seq_id;
		my $beg = $f->start;
		my $end = $f->end;
		my $strand = $f->strand;
		my $coord = "$ref\:$beg\.\.$end";
		$coord = "$ref\:$end\.\.$beg" if ($strand == -1);
		my @data;
		push @data, { Key => 'Name:', Value => "$name" };
		push @data, { Key => 'Alias:', Value => "$aliaslist" } if $aliaslist;
		push @data, { Key => 'SGDID:', Value => "$dbxref" } if $dbxref;
		push @data, { Key => 'Coordinates:', Value => "$coord" };
		push @data, { Key => 'Description:', Value => "$desc" } if $desc;
		hover("Non-coding RNA Gene", \@data);
		}

[SGD Structural Genes]
database        = scgenome
feature		= telomere:SGD centromere:SGD ARS:SGD repeat_region:SGD telomeric_repeat:SGD X_element_combinatorial_repeat:SGD X_element:SGD Y_prime_element:SGD non_transcribed_region:SGD
fgcolor		= orange
glyph           = box
category        = SGD Reference
key		= Telomere, Centromere and ARS elements
description	= \&feat_desc
bgcolor		= \&strand_color
link		= http://www.yeastgenome.org/cgi-bin/locus.fpl?locus=$name
label		= 1
balloon hover width = 350
balloon hover	= sub {
		my $f = shift;
		my $name = $f->name;
		$name =~ s/\"\'//g;
		my ($desc) = $f->attributes('Note');
		$desc =~ s/[\'\"]//g;
		my (@alias) = $f->attributes('alias');
		my $aliaslist = join(', ', @alias);
		my ($dbxref) = $f->attributes('dbxref');
		my $ref = $f->seq_id;
		my $beg = $f->start;
		my $end = $f->end;
		my $strand = $f->strand;
		my $coord = "$ref\:$beg\.\.$end";
		$coord = "$ref\:$end\.\.$beg" if ($strand == -1);
		my @data;
		push @data, { Key => 'Name:', Value => "$name" };
		push @data, { Key => 'Alias:', Value => "$aliaslist" } if $aliaslist;
		push @data, { Key => 'SGDID:', Value => "$dbxref" } if $dbxref;
		push @data, { Key => 'Coordinates:', Value => "$coord" };
		push @data, { Key => 'Description:', Value => "$desc" } if $desc;
		hover("Telomere, Centromere and ARS elements", \@data);
		}

[SGD Transposable elements]
database        = scgenome
feature		= transposable_element_gene:SGD long_terminal_repeat:SGD LTR_retrotransposon:SGD
glyph		= segments
category        = SGD Reference
bgcolor		= yellow
fgcolor		= black
height		= 6
stranded	= 1
key		= Transposons & Long Terminal Repeats
description	= \&feat_desc
link		= http://www.yeastgenome.org/cgi-bin/locus.fpl?locus=$name
label		= 1
balloon hover width = 350
balloon hover	= sub {
		my $f = shift;
		my $name = $f->name;
		$name =~ s/\"\'//g;
		my ($desc) = $f->attributes('Note');
		$desc =~ s/[\'\"]//g;
		my (@alias) = $f->attributes('alias');
		my $aliaslist = join(', ', @alias);
		my ($dbxref) = $f->attributes('dbxref');
		my $ref = $f->seq_id;
		my $beg = $f->start;
		my $end = $f->end;
		my $strand = $f->strand;
		my $coord = "$ref\:$beg\.\.$end";
		$coord = "$ref\:$end\.\.$beg" if ($strand == -1);
		my @data;
		push @data, { Key => 'Name:', Value => "$name" };
		push @data, { Key => 'Alias:', Value => "$aliaslist" } if $aliaslist;
		push @data, { Key => 'SGDID:', Value => "$dbxref" } if $dbxref;
		push @data, { Key => 'Coordinates:', Value => "$coord" };
		push @data, { Key => 'Description:', Value => "$desc" } if $desc;
		hover("Transposons & Long Terminal Repeats", \@data);
		}

[SGD TranslationF]
database        = scgenome
glyph		= translation
category        = SGD Reference
global feature	= 1
frame0		= cadetblue
frame1		= blue
frame2		= darkblue
height		= 20
fgcolor		= purple
strand		= +1
translation	= 3frame
start_codons	= 0
key		= 3-frame translation (forward)
codontable	= \&codontable_check
citation	= This track shows the position of stop codons at low magnifications,
		and the 3-frame translation at high magnifications. Only the forward strand
		is shown.

[SGD DNA/GC Content]
database        = scgenome
glyph		= dna
category        = SGD Reference
global feature	= 1
height		= 30
do_gc		= 1
fgcolor		= red
axis_color	= blue
strand		= both
key		= DNA/GC Content

[SGD TranslationR]
database        = scgenome
glyph		= translation
category        = SGD Reference
global feature	= 1
frame0		= darkred
frame1		= red
frame2		= crimson
height		= 20
fgcolor		= blue
strand		= -1
translation	= 3frame
start_codons	= 0
key		= 3-frame translation (reverse)
codontable	= \&codontable_check
citation	= This track shows the position of stop codons at low magnifications,
		and the 3-frame translation at high magnifications. Only the reverse
		strand is shown.

[ResGen PCR Primers]
database        = scgenome
feature		= primer:ResGen
category        = SGD Reference
fgcolor		= purple
glyph		= segments
key		= ResGen primers
description	= \&pcr_desc
bgcolor		= purple
link		= AUTO
label		= 1
balloon hover width = 350
balloon hover	= sub {
		my $f = shift;
		my $name = $f->name;
		$name =~ s/\"\'//g;
		my ($desc) = $f->attributes('Note');
		$desc =~ s/[\'\"]//g;
		my ($seq) = $f->attributes('Sequence');
		my $ref = $f->seq_id;
		my $beg = $f->start;
		my $end = $f->end;
		my $length = $f->length . " bp";
		my @data;
		push @data, { Key => 'Name:', Value => "$name" };
		push @data, { Key => 'Sequence:', Value => "$seq" };
		push @data, { Key => 'Coordinates:', Value => "$ref\:$beg\.\.$end" };
		push @data, { Key => 'Length:', Value => "$length" };
		push @data, { Key => 'Description:', Value => "$desc" } if $desc;
		hover("ResGen Primer", \@data);
		}

[SGD PCR Products]
database        = scgenome
feature		= PCR_product:ResGen
glyph		= primers
category        = SGD Reference
bgcolor		= purple
key		= ResGen primer products
description	= \&pcr_desc
link		= AUTO
label		= 1
balloon hover width = 350
balloon hover	= sub {
		my $f = shift;
		my $name = $f->name;
		$name =~ s/\"\'//g;
		my ($desc) = $f->attributes('Note');
		$desc =~ s/[\'\"]//g;
		my $ref = $f->seqname;
		my $beg = $f->start;
		my $end = $f->end;
		my @data;
		push @data, { Key => 'Name:', Value => "$name" };
		push @data, { Key => 'Coordinates:', Value => "$ref\:$beg\.\.$end" };
		push @data, { Key => 'Description:', Value => "$desc" } if $desc;
		hover("Predicted PCR products from ResGen primers", \@data);
		}

[SGD Clones]
feature		= clone
fgcolor		= black
glyph		= generic
category        = SGD Reference
key		= Genomic Clones
height		= 5
description	= 1
bgcolor		= black
link		= http://www.yeastgenome.org/cgi-bin/clone.pl?clone=$name
citation	= Lambda and cosmid clones created and mapped by Olson and
		Riles at WashU. Riles L; Dutchik JE; Baktha A;
		McCauley BK; Thayer EC; Leckie MP; Braden VV; Depke
		JE; Olson MV. (1993) Physical maps of the six
		smallest chromosomes of Saccharomyces cerevisiae at a
		resolution of 2.6 kilobase pairs. Genetics 134:81-150
label		= 1
balloon hover width = 350
balloon hover	= sub {
		my $f = shift;
		my $name = $f->name;
		$name =~ s/\"\'//g;
		$name = "ATCC:$name";
		my ($desc) = $f->attributes('Note');
		$desc =~ s/[\'\"]//g;
		my (@alias) = $f->attributes('alias');
		my $aliaslist = join(', ', @alias);
		my ($dbxref) = $f->attributes('dbxref');
		my $ref = $f->seq_id;
		my $beg = $f->start;
		my $end = $f->end;
		my $length = $f->length . " bp";
		my @data;
		push @data, { Key => 'Name:', Value => "$name" };
		push @data, { Key => 'Alias:', Value => "$aliaslist" } if $aliaslist;
		push @data, { Key => 'SGDID:', Value => "$dbxref" } if $dbxref;
		push @data, { Key => 'Coordinates:', Value => "$ref\:$beg\.\.$end" };
		push @data, { Key => 'Length:', Value => "$length" };
		push @data, { Key => 'Description:', Value => "$desc" } if $desc;
		hover("Genomic Clone", \@data);
		}

[MacIsaac TFBSs]
database        = encode
feature         = TF_binding_site:MacIsaac_2005
category        = Transcription Regulation:Transcription Factors
fgcolor         = black
glyph           = diamond
key             = TF ChIP chip: MacIsaac et al. (2005)
height          = 6
bgcolor         = orange
label           = 1
link            = \&TF_url
citation        = MacIsaac KD, Wang T, Gordon DB, Gifford DK, Stormo GD, Fraenkel E (2006) An improved map of conserved regulatory sites for Saccharomyces cerevisiae. BMC Bioinformatics. Mar 7;7:113. [PMID: 16522208]
balloon hover width = 350
balloon hover   = sub {
                 my $f = shift;
                 my $name = $f->name;
                 $name =~ s/\"\'//g;
                 my ($desc) = $f->attributes('Note');
                 $desc =~ s/[\'\"]//g;
                 my $ref = $f->seq_id;
                 my $beg = $f->start;
                 my $end = $f->end;
                 my $length = $f->length . " bp";
                 my @data;
                 push @data, { Key => 'Description:', Value => "$desc" };
                 push @data, { Key => 'Coordinates:', Value => "$ref\:$beg\.\.$end" };
                 push @data, { Key => 'Site Length:', Value => "$length" };
                 hover("Source: MacIsaac et al. (2006) BMC Bioformatics   Mar 7;7:113", \@data);
                 }

[Tachibana Adr1 Cat8]
database        = encode
feature		= microarray_oligo:Tachibana_2005
category	= Transcription Regulation:Transcription Factors
fgcolor		= black
glyph		= diamond
key		= Adr1 and Cat8 ChIP chip: Tachibana et al. (2005)
height		= 6
bgcolor		= orange
description	= 1
link		= AUTO
citation	= Tachibana C, Yoo JY, Tagne JB, Kacherovsky N, Lee TI, Young ET (2005) Combined global localization analysis and transcriptome data identify genes that are directly coregulated by Adr1 and Cat8. Mol Cell Biol 25(6):2138-46 [PMID:15743812]
label		= 1
balloon hover width = 350
balloon hover	= sub {
		my $f = shift;
		my $name = $f->name;
		$name =~ s/\"\'//g;
		$name =~ s/-/ /g;
		my ($desc) = $f->attributes('Note');
		$desc =~ s/[\'\"]//g;
		my ($dbxref) = $f->attributes('dbxref');
		my $ref = $f->seq_id;
		my $beg = $f->start;
		my $end = $f->end;
		my $length = $f->length . " bp";
		my @data;
		push @data, { Key => 'Description:', Value => "$name" };
		push @data, { Key => 'SGDID:', Value => "$dbxref" } if $dbxref;
		push @data, { Key => 'Coordinates:', Value => "$ref\:$beg\.\.$end" };
		push @data, { Key => 'ChIP-CHIP hit to:', Value => "$desc" } if $desc;
		push @data, { Key => 'CHIP spot Length:', Value => "$length" };
		hover("Source: Tachibana et al (2005) MCB 25:2138-2146", \@data);
		}

[Ingolia uORFs]
database    = encode
feature     = biological_region:Ingolia_2009
glyph       = christmas_arrow
category    = Other
stranded    = 1
fgcolor     = darkviolet
bgcolor     = darkviolet
label       = 1
category    = Transcription Regulation:Other
key         = Ingolia et al. 2009 uORFs
citation	= Ingolia NT, Ghaemmaghami S, Newman JR, Weissman JS. (2009) Genome-wide analysis in vivo of translation with nucleotide resolution using ribosome profiling. Science 324(5924):218-23. [PMID:19213877]
balloon hover	= sub {
		my $f = shift;
		my $name = $f->name;
                my $ref = $f->seq_id;
		my $beg = $f->start;
		my $end = $f->end;
                my ($downstream_ORF) = $f->attributes('downstream_ORF');
                #my ($num_footprints) = $f->attributes('num_uORF_ribosome_footprints');
  		my @data;
                push @data, { Key => 'Description:', Value => "uORF for $downstream_ORF" };
		push @data, { Key => 'Coordinates:', Value => "$ref\:$beg\.\.$end" };
                push @data, { Key => 'Downstream ORF:', Value => "$downstream_ORF" };
                #push @data, { Key => '# uORF ribosome footprints:', Value => "$num_footprints" };
               	hover("Source: Ingolia et al (2009) Science 324(5924):218-23", \@data);
                }

[Velculescu SAGE]
database        = encode
feature		= SAGE_tag:Velculescu_1997
glyph		= generic
bgcolor		= green
height		= 6
category	= RNA Expression Profiling:mRNA:SAGE
key		= SAGE tags: Velculescu et al (1997)
link		= AUTO
description	= \&pcr_desc
label		= \&seq_name
label		= 1
balloon hover width = 350
balloon hover	= sub {
		my $f = shift;
		my $name = $f->name;
		$name =~ s/\"\'//g;
		my ($desc) = $f->attributes('Note');
		my ($hits) = $f->attributes('total_hit_count');
		my (@others) = $f->attributes('other_hit_coordinates');
		my $other_coords = join(', ', @others);
		$desc =~ s/[\'\"]//g;
		my (@alias) = $f->attributes('alias');
		my $aliaslist = join(', ', @alias);
		my $ref = $f->seq_id;
		my $beg = $f->start;
		my $end = $f->end;
		my $length = $f->length . " bp";
		my @data;
		push @data, { Key => 'Sequence:', Value => "$name" };
		push @data, { Key => 'Coordinates:', Value => "$ref\:$beg\.\.$end" };
		push @data, { Key => 'Length:', Value => "$length" };
		push @data, { Key => 'Matches in Genome:', Value => "$hits" } if $hits;
		push @data, { Key => 'Other Coordinates:', Value => "$other_coords" } if $other_coords;
		push @data, { Key => 'Description:', Value => "$desc" } if $desc;
		hover("Source: Velculescu et al. (1997) Cell 88:243-51", \@data);
		}

[Steinmetz Pol II]
database        = encode
feature         = microarray_oligo:Steinmetz_2006_WT microarray_oligo:Steinmetz_2006_sen1
category	= Transcription Regulation:RNA Pol II ChIP
glyph		= wiggle_xyplot
graph_type      = line
fgcolor         = black
bgcolor		= sub {
		  my $f = shift;
		  my $source = $f->source;
                  if ($source eq "Steinmetz_2006_WT") {
		    return "blue";
		  } else {
		    return "green";
		  }
		}
height		= 70
min_score	= -1
max_score	= 1
scale		= right
key		= Pol II occupancy: Steinmetz et al. (2006)
bump		= 0
link		= http://www.yeastgenome.org/cgi-bin/reference/reference.pl?pubmed=17157256
citation	= Steinmetz EJ, Warren CL, Kuehner JN, Panbehi B, Ansari AZ, and Brow DA (2006) Genome-wide distribution of yeast RNA polymerase II and its control by Sen1 helicase. Molecular Cell 24(5):735-746 [PMID:17157256]
balloon hover width = 350
balloon hover	= sub {
		my @data;
		push @data, { Key => 'Title:', Value => "Genome-wide distribution of yeast RNA polymerase II and its control by Sen1 helicase." };
		push @data, { Key => 'NCBI/GEO accession:', Value => "GPL4563, GSE6293" };
		hover("Source: Steinmetz et al (2006) Molecular Cell 24(5):735-746", \@data);
		}


[Miura cDNA]
database        = encode
feature		= cDNA_clone:Miura_2006
bgcolor		= \&transcript_hit;
fgcolor		= \&transcript_hit;
glyph		= transcript2
height		= 5
category	= Gene Models:TSS
key		= cDNA transcripts: Miura et al. (2006)
description	= 1
link		= AUTO
citation	= Miura F, Kawaguchi N, Sese J, Toyoda A, Hattori M, Morishita S, Ito T (2006) A large-scale full-length cDNA analysis to explore the budding yeast transcriptome. Proc Natl Acad Sci U S A 103(47):17846-51 [PMID:17101987]
label		= 0
balloon hover width = 350
balloon hover	= sub {
		my $f = shift;
		my ($poly) = $f->attributes('3\'-end_judgement');
		my ($assign) = $f->attributes('assignment');
		my (@assocFeat) = $f->attributes('associated_feature');
		my ($List) = join(', ', @assocFeat);
		my ($URL);
		my @allFeat;
		foreach (@assocFeat) {
		    my ($ORF, @desc) = split/\s/;
		    if ($ORF =~ /^Y[A-P][LR]\d{3}/) {
			$URL = "<a href=http://link.utgenome.org/yeast_sgd.php?orfname=".$ORF."&version=200601>".$ORF."</a>";
			push(@allFeat, $URL);
		    } 
		}
		my ($allURL) = join(',', @allFeat);
		my $ref = $f->seq_id;
		my $beg = $f->start;
		my $end = $f->end;
		my @data;
		if ($end - $beg < 2001) {
		    my $strand = $f->strand;
		    my $coord = "$ref\:$beg\.\.$end";
		    $coord = "$ref\:$end\.\.$beg" if ($strand == -1);
		    push @data, { Key => '3\'-end:', Value => "$poly" } if $poly;
		    push @data, { Key => 'cDNA hit:', Value =>"$assign" } if $assign;
		    push @data, { Key => 'Feature(s):', Value => "$List" } if $List;
		    push @data, { Key => 'Coordinates:', Value => "$coord" } if $coord;
		    push @data, { Key => 'Oranges:', Value => "cDNAs with a perfect G-cap.<br>Dark: cDNA hit is unique<br>Light: cDNA hits multiple genomic locations" };
		    push @data, { Key => 'Blues:', Value => "cDNAs without a perfect G-cap.<br>Dark: cDNA hit is unique<br>Light: cDNA hits multiple genomic locations" };
		    push @data, { Key => 'More info:', Value => "Regions with >100 cDNAs are summarized as a single bar. Histogram view available for regions >20 kb." };
		    push @data, { Key => 'Additional data:', Value => "View $allURL at the UT Genome Browser." } if $allURL;
		} else {
		    push @data, { Key => 'Histogram:', Value => "The histogram shows the number of transcripts found in each region.  To view transcripts, select a region smaller than 20 kb." }
	        }
		hover("Source: Miura et al (2006) Proc Natl Acad Sci U S A 103(47):17846-51", \@data);
	        }

[Miura cDNA:20001]
database        = encode
feature		= cDNA_match:Miura_2006
glyph		= xyplot
graph_type	= boxes
bgcolor		= darkgreen
height		= 70
scale		= right
bump		= 0
group_on        = source

[Zhang TSS]
database        = encode
feature		= TSS:Zhang_2005
fgcolor		= orangered
glyph		= arrow
parallel	= 0
northeast	= 1
height		= 10
linewidth	= 2
category	= Gene Models:TSS
key		= Transcription start sites - Zhang and Dietrich (2005)
citation	= Zhang Z, Dietrich FS (2005) Mapping of transcription start sites in Saccharomyces cerevisiae using 5\' SAGE. Nucleic Acids Res 33(9):2838-51 [PMID:15905473]
label		= 0
link		= AUTO
balloon hover width = 350
balloon hover	= sub {
		my $f = shift;
		my ($freq) = $f->attributes('frequency');
		my ($assocFeat) = $f->attributes('associated_orf');
		my $ref = $f->seq_id;
		my $beg = $f->start;
		my $strand = $f->strand;
		my $coord = "$ref\:$beg";
		my @data;
		push @data, { Key => 'Frequency of occurrence:', Value => "$freq" };
		push @data, { Key => 'Associated ORF:', Value => "$assocFeat" };
		push @data, { Key => 'Coordinate:', Value => "$coord" };
		push @data, { Key => 'Title:', Value => "Mapping of transcription start sites in Saccharomyces cerevisiae using 5\' SAGE." };
		hover("Source: Zhang and Dietrich (2005) Nucleic Acids Res 33(9):2838-51", \@data);
		}
	
[OligoFinder:plugin]
search_segments	= ChrI ChrII ChrIII ChrIV ChrV ChrVI ChrVII ChrVIII ChrIX ChrX ChrXI ChrXII ChrXIII ChrXIV ChrXV ChrXVI ChrMito

[ExportFeatures:plugin]
editor		= Artemis
aggregator = on
