config_base            = /etc/gbrowse2   # overridden by environment variable GBROWSE_CONF
htdocs_base            = /Library/WebServer/Documents
url_base               = /gbrowse2
db_base                = /Library/WebServer/Documents/databases
tmp_base               = /var/tmp/gbrowse2

# If no session driver is set, then GBrowse will pick one for you.
# It will use db_file for the driver and storable for the serializer
# if available; otherwise falling back to the file driver and default serializer.

# Override driver guessing by setting these options
# The safest, but slowest session driver...
#session driver    = driver:file;serializer:default
#session args      = Directory /share/pinot/www-data/tmp/gbrowse2/sessions

# to use the berkeley DB driver comment out the previous
# line and uncomment these two
#session driver = driver:db_file;serializer:default
#session args   = FileName /share/pinot/www-data/tmp/gbrowse2/sessions.db

# DBI backend to use for uploaded userdata.
# The SQLite option is better tested
# if this option is commented out, then GBrowse will
# try 'DBI::SQLite', 'berkeleydb', 'DBI::mysql' and finally the 'memory'
# backend. For the DBI::mysql adaptor to work, you must give the web user
# permission to create databases named userdata_% using the following
# mysql command:
#    mysql> grant create on `userdata\_%`.* to 'www-data'@localhost;
# note the backquotes around the database name.

# for SQLite
#userdb_adaptor = DBI::SQLite

# for Berkeleydb
#userdb_adaptor = berkeleydb

# for mysql
#userdb_adaptor = DBI::mysql
#userdb_host    = localhost
#userdb_user    = encoder
#userdb_pass    = yeast6CA

####### User Account Registration Database ######
# If "user accounts" is true, then we will try to use
# a user registration database
user accounts          = 0

# Path to the database -- you will need to create this database and grant all
# privileges on it to the indicated user.
user_account_db        = /Library/WebServer/Documents/databases/users.sqlite

# What email gateway to use for outgoing registration confirmation messages.
# The full format is
#      <smtp.server.com>:<port>:<encryption>:<username>:<password>
# Only the first field, the server name, is required.
#    The port is assumed to be 25 unless ssl encryption is specified, in
#               which case it defaults to 465.
#    protocol is either "plain" or "ssl", "plain" assumed.
#    username and password may be required by the gateway for authentication
smtp_gateway           = smtp.gmail.com:465:ssl:authorized_user:authorized_password

## These values are used in the login confirmation message sent during
# user registration. You may customize
application_name       = GBrowse
application_name_long  = The Generic Genome Browser
email_address          = noreply@gmod.org

# name of the "superuser" who can add public tracks
admin_account          = admin
admin_dbs              = /Library/WebServer/Documents/databases/admin_uploads
